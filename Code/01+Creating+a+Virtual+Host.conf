# The two main configuration terms is [context]: http{} and [directive]: server_name
# directives, a specific configuration options
# that get set in the configuration files and consist of a name and a value.


events {}

# HTP context for anything HDP related
http {

  # This file includs variations of file extensions such as jpeg and jpg.
  include mime.types;
  # Applys css style to static file

  # the server context, which is where we define a virtual host similar
  server { 
    # each virtual host being a new server context or server block like so a virtual host 
    # server context is essentially responsible for listening on a port, 
    # typically port 80 for HTTP or 433 for HTTPS is for a given IP address or domain.

    listen 80;
    server_name <167.99.93.26>; # can use ip or domain.com or *.domain.com
    # In our case, not having a domain name configured, I'll simply use the IP address of this machine.
    # Now note that server names can also include wildcard characters asterisks which in the case of this 
    # example, will accept connections for any subdomain of this domain.

    root /sites/demo; 
    # root path from which Nginx will be serving requests or interpreting static requests.
    # from, for example, say the server receives a request for images/cat.png by default, 
    # Nginx will look for that file in the root path. /root/path/images/cat.png

  }

}

# systemctl restart nginx    --> stop service and start
# systemctl reload nginx     --> update without stop the service
# nginx -t                   --> check the syntax of configuration