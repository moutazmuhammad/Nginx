# An engine microcar is a simple server side cache that allows us to store dynamic language responses
# in order to avoid or at least minimize server side language processing for websites relying heavily
# on server side languages and database access such as and MySQL, this cache can provide incredible 
# performance benefits and drastically reduce server load.

user www-data;

worker_processes auto;

events {
  worker_connections 1024;
}

http {

  include mime.types;

  #################################
  # Configure microcache (fastcgi)
  #################################
  fastcgi_cache_path /tmp/nginx_cache levels=1:2 keys_zone=ZONE_1:100m inactive=60m;
  fastcgi_cache_key "$scheme$request_method$host$request_uri";
  add_header X-Cache $upstream_cache_status;

  server {

    listen 80;
    server_name 167.99.93.26;

    root /sites/demo;

    index index.php index.html;

    # Cache by default
    set $no_cache 0; # custom variable

    # Check for cache bypass
    if ($arg_skipcache = 1) { # custom condition  
      set $no_cache 1;
    }

    location / {
      try_files $uri $uri/ =404;
    }

    location ~\.php$ {
      # Pass php requests to the php-fpm service (fastcgi)
      include fastcgi.conf;
      fastcgi_pass unix:/run/php/php7.1-fpm.sock;

      ################
      # Enable cache
      ###############
      fastcgi_cache ZONE_1;
      fastcgi_cache_valid 200 60m; # how long a cash response should be valid for based on the response code or multiple codes to hundreds.

      fastcgi_cache_bypass $no_cache;
      fastcgi_no_cache $no_cache;
      # Meaning if this variable is one bypass, serving this from the cash and don't write the response to the cash either.
    }

  }
}
